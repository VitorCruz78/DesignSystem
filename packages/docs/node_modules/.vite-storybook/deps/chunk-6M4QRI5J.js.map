{
  "version": 3,
  "sources": ["../../../../../node_modules/core-js/internals/array-sort.js"],
  "sourcesContent": ["'use strict';\nvar arraySlice = require('../internals/array-slice');\n\nvar floor = Math.floor;\n\nvar sort = function (array, comparefn) {\n  var length = array.length;\n\n  if (length < 8) {\n    // insertion sort\n    var i = 1;\n    var element, j;\n\n    while (i < length) {\n      j = i;\n      element = array[i];\n      while (j && comparefn(array[j - 1], element) > 0) {\n        array[j] = array[--j];\n      }\n      if (j !== i++) array[j] = element;\n    }\n  } else {\n    // merge sort\n    var middle = floor(length / 2);\n    var left = sort(arraySlice(array, 0, middle), comparefn);\n    var right = sort(arraySlice(array, middle), comparefn);\n    var llength = left.length;\n    var rlength = right.length;\n    var lindex = 0;\n    var rindex = 0;\n\n    while (lindex < llength || rindex < rlength) {\n      array[lindex + rindex] = (lindex < llength && rindex < rlength)\n        ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n        : lindex < llength ? left[lindex++] : right[rindex++];\n    }\n  }\n\n  return array;\n};\n\nmodule.exports = sort;\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AAAA;AACA,QAAI,aAAa;AAEjB,QAAI,QAAQ,KAAK;AAEjB,QAAI,OAAO,SAAU,OAAO,WAAW;AACrC,UAAI,SAAS,MAAM;AAEnB,UAAI,SAAS,GAAG;AAEd,YAAI,IAAI;AACR,YAAI,SAAS;AAEb,eAAO,IAAI,QAAQ;AACjB,cAAI;AACJ,oBAAU,MAAM;AAChB,iBAAO,KAAK,UAAU,MAAM,IAAI,IAAI,OAAO,IAAI,GAAG;AAChD,kBAAM,KAAK,MAAM,EAAE;AAAA,UACrB;AACA,cAAI,MAAM;AAAK,kBAAM,KAAK;AAAA,QAC5B;AAAA,MACF,OAAO;AAEL,YAAI,SAAS,MAAM,SAAS,CAAC;AAC7B,YAAI,OAAO,KAAK,WAAW,OAAO,GAAG,MAAM,GAAG,SAAS;AACvD,YAAI,QAAQ,KAAK,WAAW,OAAO,MAAM,GAAG,SAAS;AACrD,YAAI,UAAU,KAAK;AACnB,YAAI,UAAU,MAAM;AACpB,YAAI,SAAS;AACb,YAAI,SAAS;AAEb,eAAO,SAAS,WAAW,SAAS,SAAS;AAC3C,gBAAM,SAAS,UAAW,SAAS,WAAW,SAAS,UACnD,UAAU,KAAK,SAAS,MAAM,OAAO,KAAK,IAAI,KAAK,YAAY,MAAM,YACrE,SAAS,UAAU,KAAK,YAAY,MAAM;AAAA,QAChD;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
